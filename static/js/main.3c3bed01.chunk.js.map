{"version":3,"sources":["logo.svg","Components/movie-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Movie","state","movieData","url","this","props","movieName","fetch","response","json","data","setState","console","log","src","Poster","alt","Title","Actors","Production","Director","imdbRating","Plot","React","Component","App","SearchMovie","e","show","textChange","target","value","className","type","id","onChange","placeholder","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAe,I,4BCyEAA,E,kDArDX,aAAc,IAAD,8BACT,gBACKC,MAAM,CACPC,UAAW,IAHN,E,2LAiBJC,EAAM,mEAAmEC,KAAKC,MAAMC,U,SACnEC,MAAMJ,G,cAAvBK,E,gBACaA,EAASC,O,OAAtBC,E,OACNN,KAAKO,SAAS,CAACT,UAAUQ,IACzBE,QAAQC,IAAIT,KAAKH,MAAMC,W,qIAcjB,IACEA,EAAaE,KAAKH,MAAlBC,UACP,OACI,gCACI,qBAAKY,IAAKZ,EAAUa,OAAQC,IAAKd,EAAUe,QAC3C,6BAAKf,EAAUe,QACf,0CAAaf,EAAUgB,UACvB,+CAAkBhB,EAAUiB,cAC5B,6CAAgBjB,EAAUkB,YAC1B,gDAAmBlB,EAAUmB,cAC7B,4BACCnB,EAAUoB,c,GA/CPC,IAAMC,WCuBXC,E,kDAnCb,aAAc,IAAD,8BACX,gBAOHC,YAAa,SAACC,GACX,EAAKhB,UAAS,SAAAV,GAAK,MAAG,CAAC2B,MAAK,MAG5BhB,QAAQC,IAAI,EAAKZ,MAAMK,YAZZ,EAebuB,WAAa,SAACF,GACZ,EAAKhB,UAAS,SAAAV,GAAK,MAAG,CAACK,UAAUqB,EAAEG,OAAOC,MAAMH,MAAK,OAdrD,EAAK3B,MAAM,CACT2B,MAAK,EACLtB,UAAU,IAJD,E,qDAmBX,OACE,sBAAK0B,UAAU,MAAf,UAEI,sCAGA,uBAAOC,KAAK,SAASC,GAAG,YAAYF,UAAU,aAAaG,SAAU/B,KAAKyB,WAAYO,YAAY,yBAClG,uBACA,uBACA,wBAAQJ,UAAU,aAAaK,QAASjC,KAAKsB,YAA7C,oBACDtB,KAAKH,MAAM2B,KAAK,cAAC,EAAD,CAAOtB,UAAWF,KAAKH,MAAMK,YAAa,Y,GA9BjDkB,aCMHc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3c3bed01.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\nimport '../App.css';\r\n//http://www.omdbapi.com/?i=tt3896198&apikey=2128c072&t=movieName\r\n/*\r\nexport const Movie = (props) => (\r\n    <div>\r\n    <img src={props.Poster} alt={props.Title} />\r\n    <h1>{props.Title}</h1>\r\n    <h4>Actor : {props.Actors}</h4>\r\n    <h4>Production : {props.Production}</h4>\r\n    <h4>Director : {props.Director}</h4>\r\n    <h4>IMDB Rating : {props.imdbRating}</h4>\r\n    <p>\r\n    {props.Plot}\r\n    </p>\r\n</div>\r\n);\r\n*/\r\n\r\nclass Movie extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            movieData: ''\r\n          }\r\n\r\n    }\r\n    async componentDidMount(){\r\n        /*fetch('http://www.omdbapi.com/?i=tt3896198&apikey=2128c072&t='+this.props.movieName)\r\n        .then(response => console.log(response.json()))\r\n        .then(result => {\r\n            this.setState({movieData: console.log(result)})\r\n        })\r\n\r\n        console.log(this.state.movieData);*/\r\n        \r\n       \r\n       const url = 'http://www.omdbapi.com/?i=tt3896198&apikey=2128c072&plot=full&t='+this.props.movieName;\r\n       const response = await fetch(url);\r\n       const data = await response.json();\r\n       this.setState({movieData:data});\r\n       console.log(this.state.movieData);\r\n       \r\n      /*fetch(url)\r\n      .then(response=>response.json())\r\n       .then(data=>{\r\n         this.setState({\r\n             movieData : data\r\n         })\r\n\r\n       });\r\n       console.log(this.state.movieData);*/\r\n     \r\n      }\r\n    \r\n    render(){\r\n        const {movieData} = this.state;\r\n        return(\r\n            <div>\r\n                <img src={movieData.Poster} alt={movieData.Title} />\r\n                <h1>{movieData.Title}</h1>\r\n                <h4>Actor : {movieData.Actors}</h4>\r\n                <h4>Production : {movieData.Production}</h4>\r\n                <h4>Director : {movieData.Director}</h4>\r\n                <h4>IMDB Rating : {movieData.imdbRating}</h4>\r\n                <p>\r\n                {movieData.Plot}\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Movie;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\nimport Movie from './Components/movie-component';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      show:false,\n      movieName:''\n    };\n  }\n  \n SearchMovie= (e) =>{\n    this.setState(state=>({show:true}));\n    //this.setState(state=>({movieName:e.target.value}));\n    //this.setState(state=>({movieName:e.target.value,show:true}));\n    console.log(this.state.movieName);\n  }\n\n  textChange = (e) =>{\n    this.setState(state=>({movieName:e.target.value,show:false}));\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        \n          <h1>\n           IMDB\n          </h1>\n          <input type=\"search\" id=\"txtSearch\" className=\"App-button\" onChange={this.textChange} placeholder=\"Search movie by name\"></input>\n          <br/>\n          <br/>\n          <button className=\"App-button\" onClick={this.SearchMovie} >Search</button>\n        {this.state.show?<Movie movieName={this.state.movieName}/>:null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}